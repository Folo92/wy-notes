// 为什么 0.1 + 0.2 不等于 0.3
// 1. JS用二进制处理数据，用IEEE 754 双精度浮点数标准存储 Number 类型。
// 2. 精度丢失 不是 JS的问题，而是IEEE 754 准存储位有限。
// 3. 过程中有 两次 次精度丢失，一次在存储，一次在相加。

console.table(0.1 + 0.2) // 0.30000000000000004
console.table(0.3) // 0.3
console.log(0.1 + 0.2 == 0.3) // false

// 绝对值大于或等于 2^53 的数值文本过大，无法用整数准确表示
console.log(9999999999999999) // 10000000000000000
console.log(10000000000000001) // 10000000000000000
console.log(9999999999999999 == 10000000000000001) // true

console.log((2.446242342).toFixed(2)) // 输出结果为 2.45
console.log((2.335).toFixed(2)) // 输出结果为 2.33，正常应该为 2.34

console.log(Math.pow(3, 4))
